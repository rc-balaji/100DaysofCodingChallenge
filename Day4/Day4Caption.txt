
Day 4 of #100DaysofCodingChallenge ðŸŽ¯ðŸ’¯

LeetCode

Problem 1 : 32. Longest Valid Parentheses
Submission Link : https://leetcode.com/problems/longest-valid-parentheses/submissions/1251030622

class Solution {
    public int longestValidParentheses(String s) {
        int max = 0;
        int size = s.length();
        Stack<Integer> stack = new Stack<>();

        stack.push(-1);

        for(int i=0; i<size; i++){
            char ch = s.charAt(i);
            if(ch=='('){
                stack.push(i);
            }else{
                stack.pop();
                if(stack.isEmpty()){
                    stack.push(i);
                }

                max = Math.max(max,i - stack.peek());

            }
        }

        return max;
    }
}

TC : O(n)

SC : O(n)



Problem 2 : 59. Spiral Matrix II
Submission Link : https://leetcode.com/problems/spiral-matrix-ii/submissions/1251037300

class Solution {
    public int[][] generateMatrix(int n) {

        int[][] matrix = new int[n][n];

        int top = 0,bottom = n-1,left = 0,right = n-1;

        int  k = 1;

        while(top<=bottom && left<=right){
            for(int i = left ; i<=right;i++){
                matrix[top][i] = k;
                k++;
            }
            top++;

            for(int i = top;i<=bottom;i++){
                matrix[i][right] = k;
                k++;
            }
            right--;

            if(top<=bottom){
                for(int i = right ;i>=left;i--){
                    matrix[bottom][i] = k;
                    k++;
                }

                bottom--;
            }

            if(left<=right){
                for(int i = bottom ; i>=top ;i--){
                    matrix[i][left] = k;
                    k++;
                }
                left++;
            }

        }

        return matrix;

    }
}

TC : O(n*m)

SC : O(n*m)



#arrays #matrix #simulation #stack #dsa